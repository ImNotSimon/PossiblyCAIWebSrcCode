import {
  useInfiniteQuery as useInfiniteQueryImpl,
  useMutation as useMutationImpl,
  useQueryClient as useQueryClientImpl,
  useQuery as useQueryImpl,
} from '@tanstack/react-query';

export let useQuery: typeof useQueryImpl;
export let useQueryClient: typeof useQueryClientImpl;
export let useMutation: typeof useMutationImpl;
export let useInfiniteQuery: typeof useInfiniteQueryImpl;

export const setUseQuery = (_useQuery: any) => {
  useQuery = _useQuery;
};

export const setUseQueryClient = (_useQueryClient: any) => {
  useQueryClient = _useQueryClient;
};

export const setUseInfiniteQuery = (_useInfiniteQuery: any) => {
  useInfiniteQuery = _useInfiniteQuery;
};

export const setUseMutation = (_useMutation: any) => {
  useMutation = _useMutation;
};
