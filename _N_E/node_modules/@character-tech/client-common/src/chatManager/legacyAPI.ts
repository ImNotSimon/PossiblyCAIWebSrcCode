import { Character, CharacterHistory } from '../types/app-api';
import { axios } from '../lib/axios';

export const legacyAPI = {
  fetchRecentCharacters: async () => {
    try {
      const response = await axios()<{ characters: Character[] }>({
        method: 'get',
        url: `/chat/characters/recent/`,
      });
      if (response) {
        return response.data.characters;
      }
    } catch (e) {
      console.log('error', e);
    }
  },
  fetchCharacterChatHistories: async (
    character_id: string | null | undefined,
  ) => {
    const response = await axios()<{ histories: CharacterHistory[] }>({
      method: 'post',
      url: `/chat/character/histories_v2/`,
      data: {
        external_id: character_id,
        number: 50,
      },
    });

    if (response) {
      return response.data.histories;
    }
  },
  hideCharacter: async (characterId: string): Promise<void> => {
    const response = await axios()<{ status: string }>({
      method: 'post',
      url: '/chat/character/hide/',
      data: {
        external_id: characterId,
      },
    });

    if (response.data.status !== 'OK') {
      throw new Error(
        `Failed to hide character ${characterId}: ${response.status}`,
      );
    }
    return;
  },
};
