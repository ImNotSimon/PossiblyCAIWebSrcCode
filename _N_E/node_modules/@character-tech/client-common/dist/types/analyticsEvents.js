/**
 * Analytics events used by client apps.
 *
 * New events should follow the naming convention: <noun>_<verb>, e.g., 'page_viewed', 'setting_changed'.
 *
 * Reuse events where applicable and make use of properties to differentiate between different types of the same event.
 * For example, rather than a distinct enabled & disabled event per every setting in the settings page,
 * one 'setting_changed' event can be used with properties to identify which setting was changed as well as the old & new values.
 *
 * Common properties (please consider using these where applicable):
 * - referrer: the screen/component/hook that triggered the event
 * - type: the variation of the event, e.g., 'toast_displayed' event can have type 'no_internet' or 'maintenance_mode'
 */
export const AnalyticsEvents = {
    Error: 'error',
    ForceRefresh: 'force_refresh',
    UX: {
        PageViewed: 'page_viewed',
        ContentViewed: 'content_viewed',
        CharacterSelected: 'character_selected',
        ElementClicked: 'element_clicked',
        ElementDismissed: 'element_dismissed',
        ModalOpened: 'modal_opened',
        ModalClosed: 'modal_closed',
    },
    GroupChat: {
        Updated: 'group_chat_updated',
        MemberInvoked: 'group_chat_member_invoked',
        MemberMentioned: 'group_chat_member_mentioned',
    },
    Voice: {
        RTCConnectionStatusChange: 'voice_rtc_connection_status_change',
        PreviewPlaybackChanged: 'voice_preview_playback_changed',
        Annotated: 'voice_annotated',
        FileUploaded: 'voice_file_uploaded',
        FileChosen: 'voice_file_chosen',
        StopSpeaking: 'voice_stop_charcter_speaking',
        CallStateChange: 'voice_call_state_change',
    },
    Settings: {
        Changed: 'setting_changed',
    },
    Auth: {
        AuthStarted: 'auth_started',
        Login: 'login',
        Logout: 'logout',
        EmailVerified: 'email_verified',
        SignupCompleted: 'signup_completed',
        SignupCancelled: 'signup_cancelled',
        SignupRejected: 'signup_rejected',
        LoginDisallowed: 'login_disallowed',
    },
    Search: 'search',
    Shared: 'shared',
    AppRating: {
        AppRatingModalDismissed: 'app_rating_modal_dismissed',
        AppRatingSentiment: 'app_rating_sentiment',
        AppReviewSuccessful: 'app_review_successful',
    },
    ToastDisplayed: 'toast_displayed',
    User: {
        ProfileUpdated: 'profile_updated',
        AvatarUploaded: 'avatar_uploaded',
        ToSAcknowledged: 'terms_of_service_acknowledged',
        SocialAction: 'user_social_action',
        InstallAttribution: 'appsflyer_attribution',
        PersonaUpdated: 'persona_updated',
        CharacterUpdated: 'character_updated',
    },
    Message: {
        Send: 'message_send',
        Deleted: 'message_deleted',
        Edited: 'message_edited',
        Copied: 'message_copied',
        Labeled: 'message_labeled',
        Blocked: 'message_blocked',
        FilteredAction: 'message_filtered_action',
        Pin: 'message_pin',
    },
    Notifications: {
        Opened: 'notification_opened',
    },
    Links: {
        Handled: 'link_handled',
        Opened: 'link_opened',
    },
    Purchases: {
        Complete: 'purchase_flow_complete',
    },
    Moderation: {
        Report: 'moderation_report',
    },
};
//# sourceMappingURL=analyticsEvents.js.map